<?php
 use App\Models\material_stock; use App\Models\products; use App\Models\purchase_details; use App\Models\ref; use App\Models\sale_details; use App\Models\stock; use Carbon\Carbon; use Illuminate\Support\Facades\DB; goto cHyTn; aqXu_: function stockValue() { $products = products::all(); $value = 0; foreach ($products as $product) { $value += productStockValue($product->id); } return $value; } goto ArIPG; GQPrO: function firstDayOfMonth() { $startOfMonth = Carbon::now()->startOfMonth(); return $startOfMonth->format("\131\55\x6d\x2d\x64"); } goto RPXWm; hABQU: function calculateGrowthPercentage($oldValue, $newValue) { if ($oldValue == 0) { return $newValue > 0 ? 100 : 0; } $growthPercentage = ($newValue - $oldValue) / $oldValue * 100; return $growthPercentage; } goto iuoSd; Tw6vj: function firstDayOfPreviousYear() { $startOfPreviousYear = Carbon::now()->subYear()->startOfYear(); return $startOfPreviousYear->format("\131\55\x6d\x2d\144"); } goto YtdgM; iuoSd: function projectNameAuth() { return "\x4b\110\x59\102\x45\x52\x20\124\x52\x41\x44\105\x52\x53"; } goto LnKps; NIfeO: function getStock($id) { $stocks = stock::where("\x70\162\157\x64\165\x63\x74\111\x44", $id)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; $balance -= $stock->db; } return $balance; } goto Eq2dO; ZmFos: function lastDayOfCurrentYear() { $endOfYear = Carbon::now()->endOfYear(); return $endOfYear->format("\131\55\x6d\55\x64"); } goto Tw6vj; cHyTn: function getRef() { $ref = ref::first(); if ($ref) { $ref->ref = $ref->ref + 1; } else { $ref = new ref(); $ref->ref = 1; } $ref->save(); dashboard(); return $ref->ref; } goto GQPrO; NONUE: function createStock($id, $cr, $db, $date, $notes, $ref, $warehouse) { stock::create(array("\x70\162\x6f\144\x75\143\x74\x49\x44" => $id, "\143\162" => $cr, "\x64\142" => $db, "\144\x61\164\x65" => $date, "\156\157\164\x65\x73" => $notes, "\x72\x65\x66\x49\x44" => $ref, "\167\141\162\x65\150\x6f\x75\x73\x65\x49\x44" => $warehouse)); } goto NIfeO; RPXWm: function lastDayOfMonth() { $endOfMonth = Carbon::now()->endOfMonth(); return $endOfMonth->format("\131\55\155\55\x64"); } goto lqEYp; lqEYp: function firstDayOfCurrentYear() { $startOfYear = Carbon::now()->startOfYear(); return $startOfYear->format("\x59\55\x6d\55\144"); } goto ZmFos; Eq2dO: function avgSalePrice($from, $to, $id) { $sales = sale_details::where("\160\x72\x6f\144\x75\x63\x74\x49\x44", $id); if ($from != "\141\x6c\154" && $to != "\x61\154\x6c") { $sales->whereBetween("\x64\141\x74\145", array($from, $to)); } $sales_amount = $sales->sum("\164\151"); $sales_qty = $sales->sum("\161\164\171"); if ($sales_qty > 0) { $sale_price = $sales_amount / $sales_qty; } else { $product = products::find($id); $sale_price = $product->price; } return $sale_price; } goto iJd6P; iJd6P: function avgPurchasePrice($from, $to, $id) { $purchases = purchase_details::where("\x70\x72\x6f\144\x75\143\164\x49\x44", $id); if ($from != "\x61\154\154" && $to != "\141\154\154") { $purchases->whereBetween("\x64\141\x74\x65", array($from, $to)); } $purchase_amount = $purchases->sum("\141\155\157\x75\x6e\x74"); $purchase_qty = $purchases->sum("\161\164\x79"); if ($purchase_qty > 0) { $purchase_price = $purchase_amount / $purchase_qty; } else { $product = products::find($id); $purchase_price = $product->pprice; } return $purchase_price; } goto aqXu_; ArIPG: function productStockValue($id) { $stock = getStock($id); $price = avgPurchasePrice("\x61\154\x6c", "\141\x6c\x6c", $id); dashboard(); return $price * $stock; } goto hABQU; YtdgM: function lastDayOfPreviousYear() { $endOfPreviousYear = Carbon::now()->subYear()->endOfYear(); return $endOfPreviousYear->format("\131\55\x6d\x2d\144"); } goto NONUE; LnKps: function projectNameHeader() { return "\x4b\110\131\x42\x45\122\x20\x54\122\101\104\x45\x52\x53"; } goto IQYPT; IQYPT: function projectNameShort() { return "\x4b\x54"; }