<?php
 namespace App\Http\Controllers; use App\Models\products; use App\Models\stock; use App\Models\stockAdjustment; use App\Models\units; use App\Models\warehouses; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class StockAdjustmentController extends Controller { public function index() { $adjustments = stockAdjustment::orderBy("\x69\144", "\x64\x65\163\x63")->get(); $products = products::all(); $units = units::all(); $warehouses = warehouses::all(); return view("\x73\x74\157\x63\153\56\141\x64\x6a\165\x73\x74\155\145\x6e\x74\x2e\x69\156\144\145\170", compact("\x61\144\152\x75\x73\164\x6d\x65\x6e\x74\163", "\160\x72\x6f\x64\x75\143\164\x73", "\165\x6e\x69\x74\x73", "\167\141\x72\x65\150\157\x75\x73\x65\163")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); $unit = units::find($request->unitID); $qty = $request->qty * $unit->value; stockAdjustment::create(array("\160\x72\157\144\x75\143\164\x49\x44" => $request->productID, "\167\x61\x72\x65\x68\x6f\x75\163\x65\x49\104" => $request->warehouseID, "\x75\156\151\164\x49\x44" => $request->unitID, "\165\x6e\x69\164\126\x61\154\x75\x65" => $unit->value, "\x64\141\164\x65" => $request->date, "\164\171\x70\x65" => $request->type, "\x71\164\171" => $request->qty, "\x6e\157\164\145\x73" => $request->notes, "\x72\145\x66\x49\104" => $ref)); if ($request->type == "\123\164\x6f\x63\x6b\x2d\111\x6e") { createStock($request->productID, $qty, 0, $request->date, "\x53\x74\x6f\x63\x6b\55\111\x6e\x3a\x20{$request->notes}", $ref, $request->warehouseID); } else { createStock($request->productID, 0, $qty, $request->date, "\x53\164\157\x63\153\55\x4f\165\x74\72\40{$request->notes}", $ref, $request->warehouseID); } DB::commit(); return back()->with("\x73\165\x63\143\145\163\163", "\x53\164\157\143\153\40\x41\x64\152\x75\163\x74\155\145\156\164\x20\103\x72\x65\x61\x74\x65\144"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\x72\162\x6f\x72", $e->getMessage()); } } public function show(stockAdjustment $stockAdjustment) { } public function edit(stockAdjustment $stockAdjustment) { } public function update(Request $request, stockAdjustment $stockAdjustment) { } public function destroy($ref) { try { DB::beginTransaction(); stockAdjustment::where("\162\x65\146\x49\x44", $ref)->delete(); stock::where("\x72\x65\x66\111\104", $ref)->delete(); DB::commit(); session()->forget("\x63\157\156\x66\x69\162\x6d\x65\x64\x5f\160\x61\163\x73\x77\157\x72\144"); return redirect()->route("\x73\164\157\x63\153\101\x64\x6a\x75\163\164\155\x65\156\164\x73\x2e\151\x6e\x64\x65\170")->with("\x73\165\143\x63\145\x73\x73", "\x53\164\157\x63\153\40\101\x64\x6a\x75\163\x74\155\145\x6e\164\x20\104\145\154\x65\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\x6e\x66\151\x72\155\x65\144\137\160\141\163\163\x77\x6f\162\144"); return redirect()->route("\163\164\157\x63\153\x41\x64\152\165\163\x74\x6d\145\x6e\164\x73\x2e\x69\x6e\144\x65\x78")->with("\145\x72\x72\157\x72", $e->getMessage()); } } }