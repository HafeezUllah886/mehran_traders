<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\expenseCategories; use App\Models\expenses; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class ExpensesController extends Controller { public function index() { $expenses = expenses::orderby("\151\144", "\144\145\x73\143")->get(); $accounts = accounts::business()->get(); $categories = expenseCategories::all(); return view("\x46\x69\156\x61\x6e\x63\145\56\145\170\160\145\156\163\x65\x2e\151\x6e\144\145\170", compact("\x65\x78\160\145\156\163\145\x73", "\x61\143\143\x6f\x75\156\x74\x73", "\x63\141\164\x65\147\x6f\x72\x69\x65\163")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); expenses::create(array("\x61\143\143\x6f\x75\156\164\x49\x44" => $request->accountID, "\x61\155\157\165\x6e\164" => $request->amount, "\144\141\164\145" => $request->date, "\143\141\x74" => $request->cat, "\156\157\x74\x65\x73" => $request->notes, "\x72\145\146\111\x44" => $ref)); createTransaction($request->accountID, $request->date, 0, $request->amount, "\x45\x78\160\145\x6e\x73\145\x20\x2d\40" . $request->notes, $ref); DB::commit(); return back()->with("\x73\165\x63\143\x65\163\163", "\105\170\x70\x65\156\163\145\40\123\141\x76\145\144"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\162\157\x72", $e->getMessage()); } } public function show(expenses $expenses) { } public function edit(expenses $expenses) { } public function update(Request $request, expenses $expenses) { } public function delete($ref) { try { DB::beginTransaction(); expenses::where("\162\145\146\x49\104", $ref)->delete(); transactions::where("\162\145\x66\x49\x44", $ref)->delete(); DB::commit(); session()->forget("\x63\157\x6e\146\151\x72\x6d\145\144\x5f\x70\141\163\163\x77\157\x72\144"); return redirect()->route("\145\x78\160\145\x6e\163\145\x73\x2e\x69\156\x64\x65\170")->with("\x73\x75\143\x63\145\163\x73", "\105\170\x70\x65\x6e\163\x65\40\x44\145\x6c\x65\x74\145\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\146\151\x72\x6d\145\x64\x5f\x70\x61\x73\163\x77\157\162\x64"); return redirect()->route("\145\170\x70\x65\156\163\145\163\x2e\151\156\x64\x65\170")->with("\x65\x72\x72\157\x72", $e->getMessage()); } } }