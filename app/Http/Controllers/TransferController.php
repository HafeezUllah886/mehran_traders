<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\x69\x64", "\144\145\x73\x63")->get(); $accounts = accounts::all(); return view("\106\151\x6e\141\156\x63\x65\x2e\x74\x72\141\x6e\163\x66\x65\x72\x2e\151\x6e\144\x65\x78", compact("\164\x72\141\x6e\x73\x66\145\x72\163", "\141\143\x63\157\x75\x6e\x74\163")); } public function create() { } public function store(Request $request) { $request->validate(array("\164\157" => "\x64\151\x66\x66\145\x72\x65\x6e\x74\72\146\162\x6f\x6d"), array("\164\157\x2e\x64\x69\146\x66\145\x72\145\x6e\164" => "\x46\162\x6f\x6d\40\x61\x6e\x64\x20\x54\157\x20\101\143\x63\157\165\x6e\164\x73\40\x4d\165\163\x74\40\x62\145\x20\x64\151\146\146\145\162\x65\x6e\164")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\146\162\157\x6d" => $request->from, "\x74\157" => $request->to, "\144\x61\x74\x65" => $request->date, "\141\155\157\165\156\164" => $request->amount, "\156\x6f\x74\145\163" => $request->notes, "\162\x65\x66\x49\x44" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; if ($transfer->fromAccount->type == "\x43\x75\163\164\x6f\x6d\145\162") { createTransaction($request->from, $request->date, $request->amount, 0, "\124\162\x61\156\163\146\x65\162\x65\x64\40\164\x6f\40{$toAccount}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\124\x72\x61\x6e\163\x66\145\162\145\x64\x20\146\162\x6f\x6d\40{$fromAccount}", $ref); } elseif ($transfer->toAccount->type == "\103\x75\163\164\x6f\155\x65\162") { createTransaction($request->from, $request->date, 0, $request->amount, "\x54\162\141\x6e\x73\x66\x65\162\145\144\x20\x74\157\x20{$toAccount}", $ref); createTransaction($request->to, $request->date, 0, $request->amount, "\124\162\x61\156\163\146\145\x72\145\x64\40\146\162\157\x6d\40{$fromAccount}", $ref); } else { createTransaction($request->from, $request->date, 0, $request->amount, "\x54\162\141\x6e\x73\x66\145\162\145\144\x20\164\x6f\40{$toAccount}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\124\x72\141\156\x73\x66\145\x72\x65\144\40\x66\162\x6f\x6d\40{$fromAccount}", $ref); } DB::commit(); return back()->with("\x73\165\143\143\145\x73\x73", "\x54\162\x61\156\x73\x66\x65\x72\145\144\x20\123\x75\x63\x63\x65\163\163\146\x75\154\x6c\x79"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\162\x6f\162", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\x72\x65\x66\x49\x44", $ref)->delete(); transactions::where("\x72\145\x66\111\x44", $ref)->delete(); DB::commit(); session()->forget("\x63\157\x6e\x66\151\x72\x6d\x65\144\x5f\x70\141\163\x73\x77\157\162\144"); return redirect()->route("\x74\162\x61\x6e\x73\146\x65\162\x73\56\x69\x6e\144\x65\x78")->with("\163\x75\x63\143\x65\163\x73", "\124\162\141\156\x73\146\x65\162\40\104\145\154\145\164\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\x66\151\x72\x6d\145\144\x5f\x70\141\x73\x73\167\157\x72\144"); return redirect()->route("\164\x72\141\156\x73\x66\x65\162\163\x2e\151\156\144\x65\170")->with("\145\x72\x72\157\x72", $e->getMessage()); } } }